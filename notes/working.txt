‚úÖ 1. Configure Node.js on EC2 (Ubuntu)
    SSH into your EC2 instance first:

    bash:
    ssh -i your-key.pem ubuntu@your-ec2-public-ip

    Install Node.js (LTS version):

        bash:
        curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
        sudo apt-get install -y nodejs

    Check versions:
        bash:
        node -v
        npm -v

    Install Git:

        bash:
        sudo apt update
        sudo apt install git -y


    Clone your repo:
        bash:
        git clone https://github.com/ajayvishwakarma457/aws-app.git
        cd aws-app

    Install dependencies:
        bash:
        npm install

    Run your app (temporary test):
        bash:
        node app.js



‚úÖ 2. Install & Configure Jenkins

    Install Java (required for Jenkins):

        bash:
        sudo apt update
        sudo apt install openjdk-17-jdk -y
        java -version

    Add Jenkins repo and install:
        bash:
        # 1. Download and add the Jenkins GPG key
        curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee \
        /usr/share/keyrings/jenkins-keyring.asc > /dev/null

        # 2. Add Jenkins repo with signed-by
        echo "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/" | \
        sudo tee /etc/apt/sources.list.d/jenkins.list > /dev/null

        # 3. Update apt and install Jenkins
        sudo apt update
        sudo apt install jenkins -y

    Start and enable Jenkins:
        sudo systemctl start jenkins
        sudo systemctl enable jenkins


    Open Jenkins in your browser:
        Open: http://<your-ec2-public-ip>:8080

        Get Jenkins initial password:
        bash:
        sudo cat /var/lib/jenkins/secrets/initialAdminPassword

        Complete the setup and install Suggested Plugins.


‚úÖ 3. Create CI/CD Pipeline in Jenkins

    Install Git & Node in Jenkins (globally available):

        Inside Jenkins, go to:
            Manage Jenkins > Global Tool Configuration
            Add:
                Git (should be auto-detected)
                Node.js ‚Üí Add installation (e.g., Node 18.x)

        Also install these Jenkins plugins:
            NodeJS Plugin
            Pipeline Plugin
            Git Plugin

    Create a new pipeline job:
        Go to Jenkins dashboard ‚Üí New Item
        Enter name: aws-nodejs-pipeline
        Select Pipeline ‚Üí OK

    
    ‚úÖ 4. Install pm2 globally
        bash:
        sudo npm install -g pm2

    ‚úÖ 5. Create Deployment Directory & Give Permissions
        bash:
        sudo mkdir -p /var/www/aws-app
        sudo chown -R jenkins:jenkins /var/www/aws-app

    ‚úÖ 7. Allow Jenkins Passwordless sudo
        bash:
        sudo visudo
        Add this line at the end:

    Add this line at the end:
        bash:
        jenkins ALL=(ALL) NOPASSWD: ALL



    Add this pipeline script (example):

        pipeline {
            agent any

            tools {
                nodejs "node18"
            }

            environment {
                DEPLOY_DIR = "/var/www/aws-app"
            }

            stages {
                stage('Clone Repo') {
                    steps {
                        git branch: 'main', url: 'https://github.com/ajayvishwakarma457/aws-app.git'
                    }
                }

                stage('Deploy Files') {
                    steps {
                        sh '''
                        echo "Creating deployment directory if not exists..."
                        sudo mkdir -p $DEPLOY_DIR
                        sudo chown -R jenkins:jenkins $DEPLOY_DIR

                        echo "Copying files to $DEPLOY_DIR"
                        rsync -av --delete . $DEPLOY_DIR
                        '''
                    }
                }

                stage('Install & Run App') {
                    steps {
                        sh '''
                        echo "Installing dependencies..."
                        cd $DEPLOY_DIR
                        npm install

                        echo "Restarting app with PM2..."
                        pm2 restart aws-app || pm2 start app.js --name aws-app
                        '''
                    }
                }
            }

            post {
                success {
                    echo '‚úÖ Deployment successful!'
                }
                failure {
                    echo '‚ùå Deployment failed.'
                }
            }
        }


        Optionally, you can use pm2 instead of npm start & for better background process management.


    üöÄ Bonus: Auto-start App with PM2
        Install PM2 globally:
        bash:
        sudo npm install -g pm2

        Start your app:

        bash:
        pm2 start app.js
        pm2 save
        pm2 startup






